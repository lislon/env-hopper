/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutEnvEnvSlugRouteImport } from './routes/_layout/env/$envSlug'
import { Route as LayoutAppAppSlugRouteImport } from './routes/_layout/app/$appSlug'
import { Route as LayoutEnvEnvSlugSubSubValueRouteImport } from './routes/_layout/env/$envSlug/sub/$subValue'
import { Route as LayoutEnvEnvSlugAppAppSlugRouteImport } from './routes/_layout/env/$envSlug/app/$appSlug'
import { Route as LayoutAppAppSlugSubSubValueRouteImport } from './routes/_layout/app/$appSlug/sub/$subValue'
import { Route as LayoutEnvEnvSlugAppAppSlugSubSubValueRouteImport } from './routes/_layout/env/$envSlug/app/$appSlug/sub/$subValue'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutEnvEnvSlugRoute = LayoutEnvEnvSlugRouteImport.update({
  id: '/env/$envSlug',
  path: '/env/$envSlug',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAppAppSlugRoute = LayoutAppAppSlugRouteImport.update({
  id: '/app/$appSlug',
  path: '/app/$appSlug',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutEnvEnvSlugSubSubValueRoute =
  LayoutEnvEnvSlugSubSubValueRouteImport.update({
    id: '/sub/$subValue',
    path: '/sub/$subValue',
    getParentRoute: () => LayoutEnvEnvSlugRoute,
  } as any)
const LayoutEnvEnvSlugAppAppSlugRoute =
  LayoutEnvEnvSlugAppAppSlugRouteImport.update({
    id: '/app/$appSlug',
    path: '/app/$appSlug',
    getParentRoute: () => LayoutEnvEnvSlugRoute,
  } as any)
const LayoutAppAppSlugSubSubValueRoute =
  LayoutAppAppSlugSubSubValueRouteImport.update({
    id: '/sub/$subValue',
    path: '/sub/$subValue',
    getParentRoute: () => LayoutAppAppSlugRoute,
  } as any)
const LayoutEnvEnvSlugAppAppSlugSubSubValueRoute =
  LayoutEnvEnvSlugAppAppSlugSubSubValueRouteImport.update({
    id: '/sub/$subValue',
    path: '/sub/$subValue',
    getParentRoute: () => LayoutEnvEnvSlugAppAppSlugRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof LayoutIndexRoute
  '/app/$appSlug': typeof LayoutAppAppSlugRouteWithChildren
  '/env/$envSlug': typeof LayoutEnvEnvSlugRouteWithChildren
  '/app/$appSlug/sub/$subValue': typeof LayoutAppAppSlugSubSubValueRoute
  '/env/$envSlug/app/$appSlug': typeof LayoutEnvEnvSlugAppAppSlugRouteWithChildren
  '/env/$envSlug/sub/$subValue': typeof LayoutEnvEnvSlugSubSubValueRoute
  '/env/$envSlug/app/$appSlug/sub/$subValue': typeof LayoutEnvEnvSlugAppAppSlugSubSubValueRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/app/$appSlug': typeof LayoutAppAppSlugRouteWithChildren
  '/env/$envSlug': typeof LayoutEnvEnvSlugRouteWithChildren
  '/app/$appSlug/sub/$subValue': typeof LayoutAppAppSlugSubSubValueRoute
  '/env/$envSlug/app/$appSlug': typeof LayoutEnvEnvSlugAppAppSlugRouteWithChildren
  '/env/$envSlug/sub/$subValue': typeof LayoutEnvEnvSlugSubSubValueRoute
  '/env/$envSlug/app/$appSlug/sub/$subValue': typeof LayoutEnvEnvSlugAppAppSlugSubSubValueRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/app/$appSlug': typeof LayoutAppAppSlugRouteWithChildren
  '/_layout/env/$envSlug': typeof LayoutEnvEnvSlugRouteWithChildren
  '/_layout/app/$appSlug/sub/$subValue': typeof LayoutAppAppSlugSubSubValueRoute
  '/_layout/env/$envSlug/app/$appSlug': typeof LayoutEnvEnvSlugAppAppSlugRouteWithChildren
  '/_layout/env/$envSlug/sub/$subValue': typeof LayoutEnvEnvSlugSubSubValueRoute
  '/_layout/env/$envSlug/app/$appSlug/sub/$subValue': typeof LayoutEnvEnvSlugAppAppSlugSubSubValueRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app/$appSlug'
    | '/env/$envSlug'
    | '/app/$appSlug/sub/$subValue'
    | '/env/$envSlug/app/$appSlug'
    | '/env/$envSlug/sub/$subValue'
    | '/env/$envSlug/app/$appSlug/sub/$subValue'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/$appSlug'
    | '/env/$envSlug'
    | '/app/$appSlug/sub/$subValue'
    | '/env/$envSlug/app/$appSlug'
    | '/env/$envSlug/sub/$subValue'
    | '/env/$envSlug/app/$appSlug/sub/$subValue'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/app/$appSlug'
    | '/_layout/env/$envSlug'
    | '/_layout/app/$appSlug/sub/$subValue'
    | '/_layout/env/$envSlug/app/$appSlug'
    | '/_layout/env/$envSlug/sub/$subValue'
    | '/_layout/env/$envSlug/app/$appSlug/sub/$subValue'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/env/$envSlug': {
      id: '/_layout/env/$envSlug'
      path: '/env/$envSlug'
      fullPath: '/env/$envSlug'
      preLoaderRoute: typeof LayoutEnvEnvSlugRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/app/$appSlug': {
      id: '/_layout/app/$appSlug'
      path: '/app/$appSlug'
      fullPath: '/app/$appSlug'
      preLoaderRoute: typeof LayoutAppAppSlugRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/env/$envSlug/sub/$subValue': {
      id: '/_layout/env/$envSlug/sub/$subValue'
      path: '/sub/$subValue'
      fullPath: '/env/$envSlug/sub/$subValue'
      preLoaderRoute: typeof LayoutEnvEnvSlugSubSubValueRouteImport
      parentRoute: typeof LayoutEnvEnvSlugRoute
    }
    '/_layout/env/$envSlug/app/$appSlug': {
      id: '/_layout/env/$envSlug/app/$appSlug'
      path: '/app/$appSlug'
      fullPath: '/env/$envSlug/app/$appSlug'
      preLoaderRoute: typeof LayoutEnvEnvSlugAppAppSlugRouteImport
      parentRoute: typeof LayoutEnvEnvSlugRoute
    }
    '/_layout/app/$appSlug/sub/$subValue': {
      id: '/_layout/app/$appSlug/sub/$subValue'
      path: '/sub/$subValue'
      fullPath: '/app/$appSlug/sub/$subValue'
      preLoaderRoute: typeof LayoutAppAppSlugSubSubValueRouteImport
      parentRoute: typeof LayoutAppAppSlugRoute
    }
    '/_layout/env/$envSlug/app/$appSlug/sub/$subValue': {
      id: '/_layout/env/$envSlug/app/$appSlug/sub/$subValue'
      path: '/sub/$subValue'
      fullPath: '/env/$envSlug/app/$appSlug/sub/$subValue'
      preLoaderRoute: typeof LayoutEnvEnvSlugAppAppSlugSubSubValueRouteImport
      parentRoute: typeof LayoutEnvEnvSlugAppAppSlugRoute
    }
  }
}

interface LayoutAppAppSlugRouteChildren {
  LayoutAppAppSlugSubSubValueRoute: typeof LayoutAppAppSlugSubSubValueRoute
}

const LayoutAppAppSlugRouteChildren: LayoutAppAppSlugRouteChildren = {
  LayoutAppAppSlugSubSubValueRoute: LayoutAppAppSlugSubSubValueRoute,
}

const LayoutAppAppSlugRouteWithChildren =
  LayoutAppAppSlugRoute._addFileChildren(LayoutAppAppSlugRouteChildren)

interface LayoutEnvEnvSlugAppAppSlugRouteChildren {
  LayoutEnvEnvSlugAppAppSlugSubSubValueRoute: typeof LayoutEnvEnvSlugAppAppSlugSubSubValueRoute
}

const LayoutEnvEnvSlugAppAppSlugRouteChildren: LayoutEnvEnvSlugAppAppSlugRouteChildren =
  {
    LayoutEnvEnvSlugAppAppSlugSubSubValueRoute:
      LayoutEnvEnvSlugAppAppSlugSubSubValueRoute,
  }

const LayoutEnvEnvSlugAppAppSlugRouteWithChildren =
  LayoutEnvEnvSlugAppAppSlugRoute._addFileChildren(
    LayoutEnvEnvSlugAppAppSlugRouteChildren,
  )

interface LayoutEnvEnvSlugRouteChildren {
  LayoutEnvEnvSlugAppAppSlugRoute: typeof LayoutEnvEnvSlugAppAppSlugRouteWithChildren
  LayoutEnvEnvSlugSubSubValueRoute: typeof LayoutEnvEnvSlugSubSubValueRoute
}

const LayoutEnvEnvSlugRouteChildren: LayoutEnvEnvSlugRouteChildren = {
  LayoutEnvEnvSlugAppAppSlugRoute: LayoutEnvEnvSlugAppAppSlugRouteWithChildren,
  LayoutEnvEnvSlugSubSubValueRoute: LayoutEnvEnvSlugSubSubValueRoute,
}

const LayoutEnvEnvSlugRouteWithChildren =
  LayoutEnvEnvSlugRoute._addFileChildren(LayoutEnvEnvSlugRouteChildren)

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAppAppSlugRoute: typeof LayoutAppAppSlugRouteWithChildren
  LayoutEnvEnvSlugRoute: typeof LayoutEnvEnvSlugRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAppAppSlugRoute: LayoutAppAppSlugRouteWithChildren,
  LayoutEnvEnvSlugRoute: LayoutEnvEnvSlugRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
