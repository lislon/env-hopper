/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as LayoutImport } from './routes/_layout';
import { Route as LayoutIndexImport } from './routes/_layout/index';
import { Route as LayoutEnvEnvIdImport } from './routes/_layout/env/$envId';
import { Route as LayoutAppAppIdImport } from './routes/_layout/app/$appId';
import { Route as LayoutEnvEnvIdSubSubValueImport } from './routes/_layout/env/$envId/sub/$subValue';
import { Route as LayoutEnvEnvIdAppAppIdImport } from './routes/_layout/env/$envId/app/$appId';
import { Route as LayoutAppAppIdSubSubValueImport } from './routes/_layout/app/$appId/sub/$subValue';
import { Route as LayoutEnvEnvIdAppAppIdSubSubValueImport } from './routes/_layout/env/$envId/app/$appId/sub/$subValue';

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any);

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutEnvEnvIdRoute = LayoutEnvEnvIdImport.update({
  id: '/env/$envId',
  path: '/env/$envId',
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutAppAppIdRoute = LayoutAppAppIdImport.update({
  id: '/app/$appId',
  path: '/app/$appId',
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutEnvEnvIdSubSubValueRoute = LayoutEnvEnvIdSubSubValueImport.update({
  id: '/sub/$subValue',
  path: '/sub/$subValue',
  getParentRoute: () => LayoutEnvEnvIdRoute,
} as any);

const LayoutEnvEnvIdAppAppIdRoute = LayoutEnvEnvIdAppAppIdImport.update({
  id: '/app/$appId',
  path: '/app/$appId',
  getParentRoute: () => LayoutEnvEnvIdRoute,
} as any);

const LayoutAppAppIdSubSubValueRoute = LayoutAppAppIdSubSubValueImport.update({
  id: '/sub/$subValue',
  path: '/sub/$subValue',
  getParentRoute: () => LayoutAppAppIdRoute,
} as any);

const LayoutEnvEnvIdAppAppIdSubSubValueRoute =
  LayoutEnvEnvIdAppAppIdSubSubValueImport.update({
    id: '/sub/$subValue',
    path: '/sub/$subValue',
    getParentRoute: () => LayoutEnvEnvIdAppAppIdRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    '/_layout/': {
      id: '/_layout/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof LayoutIndexImport;
      parentRoute: typeof LayoutImport;
    };
    '/_layout/app/$appId': {
      id: '/_layout/app/$appId';
      path: '/app/$appId';
      fullPath: '/app/$appId';
      preLoaderRoute: typeof LayoutAppAppIdImport;
      parentRoute: typeof LayoutImport;
    };
    '/_layout/env/$envId': {
      id: '/_layout/env/$envId';
      path: '/env/$envId';
      fullPath: '/env/$envId';
      preLoaderRoute: typeof LayoutEnvEnvIdImport;
      parentRoute: typeof LayoutImport;
    };
    '/_layout/app/$appId/sub/$subValue': {
      id: '/_layout/app/$appId/sub/$subValue';
      path: '/sub/$subValue';
      fullPath: '/app/$appId/sub/$subValue';
      preLoaderRoute: typeof LayoutAppAppIdSubSubValueImport;
      parentRoute: typeof LayoutAppAppIdImport;
    };
    '/_layout/env/$envId/app/$appId': {
      id: '/_layout/env/$envId/app/$appId';
      path: '/app/$appId';
      fullPath: '/env/$envId/app/$appId';
      preLoaderRoute: typeof LayoutEnvEnvIdAppAppIdImport;
      parentRoute: typeof LayoutEnvEnvIdImport;
    };
    '/_layout/env/$envId/sub/$subValue': {
      id: '/_layout/env/$envId/sub/$subValue';
      path: '/sub/$subValue';
      fullPath: '/env/$envId/sub/$subValue';
      preLoaderRoute: typeof LayoutEnvEnvIdSubSubValueImport;
      parentRoute: typeof LayoutEnvEnvIdImport;
    };
    '/_layout/env/$envId/app/$appId/sub/$subValue': {
      id: '/_layout/env/$envId/app/$appId/sub/$subValue';
      path: '/sub/$subValue';
      fullPath: '/env/$envId/app/$appId/sub/$subValue';
      preLoaderRoute: typeof LayoutEnvEnvIdAppAppIdSubSubValueImport;
      parentRoute: typeof LayoutEnvEnvIdAppAppIdImport;
    };
  }
}

// Create and export the route tree

interface LayoutAppAppIdRouteChildren {
  LayoutAppAppIdSubSubValueRoute: typeof LayoutAppAppIdSubSubValueRoute;
}

const LayoutAppAppIdRouteChildren: LayoutAppAppIdRouteChildren = {
  LayoutAppAppIdSubSubValueRoute: LayoutAppAppIdSubSubValueRoute,
};

const LayoutAppAppIdRouteWithChildren = LayoutAppAppIdRoute._addFileChildren(
  LayoutAppAppIdRouteChildren,
);

interface LayoutEnvEnvIdAppAppIdRouteChildren {
  LayoutEnvEnvIdAppAppIdSubSubValueRoute: typeof LayoutEnvEnvIdAppAppIdSubSubValueRoute;
}

const LayoutEnvEnvIdAppAppIdRouteChildren: LayoutEnvEnvIdAppAppIdRouteChildren =
  {
    LayoutEnvEnvIdAppAppIdSubSubValueRoute:
      LayoutEnvEnvIdAppAppIdSubSubValueRoute,
  };

const LayoutEnvEnvIdAppAppIdRouteWithChildren =
  LayoutEnvEnvIdAppAppIdRoute._addFileChildren(
    LayoutEnvEnvIdAppAppIdRouteChildren,
  );

interface LayoutEnvEnvIdRouteChildren {
  LayoutEnvEnvIdAppAppIdRoute: typeof LayoutEnvEnvIdAppAppIdRouteWithChildren;
  LayoutEnvEnvIdSubSubValueRoute: typeof LayoutEnvEnvIdSubSubValueRoute;
}

const LayoutEnvEnvIdRouteChildren: LayoutEnvEnvIdRouteChildren = {
  LayoutEnvEnvIdAppAppIdRoute: LayoutEnvEnvIdAppAppIdRouteWithChildren,
  LayoutEnvEnvIdSubSubValueRoute: LayoutEnvEnvIdSubSubValueRoute,
};

const LayoutEnvEnvIdRouteWithChildren = LayoutEnvEnvIdRoute._addFileChildren(
  LayoutEnvEnvIdRouteChildren,
);

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute;
  LayoutAppAppIdRoute: typeof LayoutAppAppIdRouteWithChildren;
  LayoutEnvEnvIdRoute: typeof LayoutEnvEnvIdRouteWithChildren;
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAppAppIdRoute: LayoutAppAppIdRouteWithChildren,
  LayoutEnvEnvIdRoute: LayoutEnvEnvIdRouteWithChildren,
};

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren);

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren;
  '/': typeof LayoutIndexRoute;
  '/app/$appId': typeof LayoutAppAppIdRouteWithChildren;
  '/env/$envId': typeof LayoutEnvEnvIdRouteWithChildren;
  '/app/$appId/sub/$subValue': typeof LayoutAppAppIdSubSubValueRoute;
  '/env/$envId/app/$appId': typeof LayoutEnvEnvIdAppAppIdRouteWithChildren;
  '/env/$envId/sub/$subValue': typeof LayoutEnvEnvIdSubSubValueRoute;
  '/env/$envId/app/$appId/sub/$subValue': typeof LayoutEnvEnvIdAppAppIdSubSubValueRoute;
}

export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute;
  '/app/$appId': typeof LayoutAppAppIdRouteWithChildren;
  '/env/$envId': typeof LayoutEnvEnvIdRouteWithChildren;
  '/app/$appId/sub/$subValue': typeof LayoutAppAppIdSubSubValueRoute;
  '/env/$envId/app/$appId': typeof LayoutEnvEnvIdAppAppIdRouteWithChildren;
  '/env/$envId/sub/$subValue': typeof LayoutEnvEnvIdSubSubValueRoute;
  '/env/$envId/app/$appId/sub/$subValue': typeof LayoutEnvEnvIdAppAppIdSubSubValueRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_layout': typeof LayoutRouteWithChildren;
  '/_layout/': typeof LayoutIndexRoute;
  '/_layout/app/$appId': typeof LayoutAppAppIdRouteWithChildren;
  '/_layout/env/$envId': typeof LayoutEnvEnvIdRouteWithChildren;
  '/_layout/app/$appId/sub/$subValue': typeof LayoutAppAppIdSubSubValueRoute;
  '/_layout/env/$envId/app/$appId': typeof LayoutEnvEnvIdAppAppIdRouteWithChildren;
  '/_layout/env/$envId/sub/$subValue': typeof LayoutEnvEnvIdSubSubValueRoute;
  '/_layout/env/$envId/app/$appId/sub/$subValue': typeof LayoutEnvEnvIdAppAppIdSubSubValueRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ''
    | '/'
    | '/app/$appId'
    | '/env/$envId'
    | '/app/$appId/sub/$subValue'
    | '/env/$envId/app/$appId'
    | '/env/$envId/sub/$subValue'
    | '/env/$envId/app/$appId/sub/$subValue';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/app/$appId'
    | '/env/$envId'
    | '/app/$appId/sub/$subValue'
    | '/env/$envId/app/$appId'
    | '/env/$envId/sub/$subValue'
    | '/env/$envId/app/$appId/sub/$subValue';
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/app/$appId'
    | '/_layout/env/$envId'
    | '/_layout/app/$appId/sub/$subValue'
    | '/_layout/env/$envId/app/$appId'
    | '/_layout/env/$envId/sub/$subValue'
    | '/_layout/env/$envId/app/$appId/sub/$subValue';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/app/$appId",
        "/_layout/env/$envId"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/app/$appId": {
      "filePath": "_layout/app/$appId.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/app/$appId/sub/$subValue"
      ]
    },
    "/_layout/env/$envId": {
      "filePath": "_layout/env/$envId.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/env/$envId/app/$appId",
        "/_layout/env/$envId/sub/$subValue"
      ]
    },
    "/_layout/app/$appId/sub/$subValue": {
      "filePath": "_layout/app/$appId/sub/$subValue.tsx",
      "parent": "/_layout/app/$appId"
    },
    "/_layout/env/$envId/app/$appId": {
      "filePath": "_layout/env/$envId/app/$appId.tsx",
      "parent": "/_layout/env/$envId",
      "children": [
        "/_layout/env/$envId/app/$appId/sub/$subValue"
      ]
    },
    "/_layout/env/$envId/sub/$subValue": {
      "filePath": "_layout/env/$envId/sub/$subValue.tsx",
      "parent": "/_layout/env/$envId"
    },
    "/_layout/env/$envId/app/$appId/sub/$subValue": {
      "filePath": "_layout/env/$envId/app/$appId/sub/$subValue.tsx",
      "parent": "/_layout/env/$envId/app/$appId"
    }
  }
}
ROUTE_MANIFEST_END */
